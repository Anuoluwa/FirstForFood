{
  "swagger": "2.0",
  "info": {
    "description": "Fast-Food-Fastâ€‹ is a food delivery service app for a restaurant.",
    "version": "2.0.0",
    "title": "SwiftFood API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "auth",
      "description": "Authentication and authorization for users and admin"
    },
    {
      "name": "menu",
      "description": "Operations about menu for admin"
    },
    {
      "name": "orders",
      "description": "Operations about ordering food"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/orders": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Add a new pet to the store",
        "description": "",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "qty",
            "in": "query",
            "description": "food item quantity",
            "required": true,
            "type": "string"
          },
          {
            "name": "menuId",
            "in": "query",
            "description": "MenuId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Update an existing order",
        "description": "Update order",
        "operationId": "updateorder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "update order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "returns all orders",
        "description": "Returns all order",
        "operationId": "getOrder",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/orders/id": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "returns an orders",
        "description": "Returns an order",
        "operationId": "getOrderId",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/users/userId/orders/": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "returns user history",
        "description": "Returns user order history",
        "operationId": "getUserHistory",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/menu/": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "Returns menu ",
        "description": "Returns menu with food item ",
        "operationId": "getMenu",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/menu": {
      "post": {
        "tags": [
          "menu"
        ],
        "summary": "Create a new menu",
        "description": "",
        "operationId": "createMenu",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "foodName",
            "in": "query",
            "description": "username for new user",
            "required": true,
            "type": "string"
          },
          {
            "name": "foodDescr",
            "in": "query",
            "description": "Valid email for new users",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "Password for user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "signup for new users",
        "description": "signup fornew users",
        "operationId": "signup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "username for new user",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Valid email for new users",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password for user",
            "required": true,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "User Phone contact",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "User preferred delivery address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logs user into the app",
        "description": "",
        "operationId": "login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "username",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Orders": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Menu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Auth": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}